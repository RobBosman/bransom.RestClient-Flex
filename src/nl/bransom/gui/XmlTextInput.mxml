<?xml version="1.0" encoding="utf-8"?>
<mx:TextInput xmlns:fx="http://ns.adobe.com/mxml/2009"
			  xmlns:mx="library://ns.adobe.com/flex/mx"
			  enabled="{objectXml != null}"
			  text="{getText(objectXml, propertyName)}"
			  focusIn="focusIn()"
			  focusOut="focusOut()"
			  change="changeHandler()"
			  styleName="{getStyleName(text, emptyText, emptyStyle, errorString, errorStyle)}"
			  toolTip="{getToolTip(text, width)}">

	<fx:Script>
		<![CDATA[
			import nl.bransom.XmlUtils;
			import nl.bransom.rest.RestClient;

			[Bindable] public var restClient:RestClient;
			[Bindable] public var objectXml:XML;
			[Bindable] public var propertyName:String;
			[Bindable] public var asCData:Boolean = false;
			[Bindable] public var emptyText:String = "";
			[Bindable] public var emptyStyle:String = "";
			[Bindable] public var errorStyle:String = "";
			
			private function getText(objectXml:XML, propertyName:String):String {
				var textContent:String = XmlUtils.getTextContent(objectXml, propertyName);
				if (textContent != "") {
					return textContent;
				} else {
					return emptyText;
				}
			}
			
			private function focusIn():void {
				if ((emptyText != "") && (text == emptyText)) {
					text = "";
				}
			}

			private function focusOut():void {
				if ((emptyText != "") && (text == "")) {
					text = emptyText;
				}
				horizontalScrollPosition = 0;
			}
			
			private function changeHandler():void {
				var textContent:String;
				if (text == emptyText) {
					textContent = "";
				} else {
					textContent = text;
				}
				restClient.setTextContent(objectXml, propertyName, textContent, asCData);
			}
			
			private function getStyleName(text:String, emptyText:String, emptyStyle:String, errorString:String,
																							errorStyle:String):String {
				if ((errorString != null) && (errorString != "")) {
					return errorStyle;
				} else if ((emptyText != "") && ((text == emptyText) || (text == ""))) {
					return emptyStyle;
				} else {
					return "";
				}
			}
			
			private function getToolTip(text:String, width:Number):String {
				if (textWidth > width - 4) {
					return text;
				} else {
					return "";
				}
			}
		]]>
	</fx:Script>
</mx:TextInput>
